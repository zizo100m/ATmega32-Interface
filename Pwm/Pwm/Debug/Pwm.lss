
Pwm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007e8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  000007e8  0000087c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080007e  0080007e  0000089a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000089a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000908  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000115f  00000000  00000000  000009d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000873  00000000  00000000  00001b37  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000587  00000000  00000000  000023aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000144  00000000  00000000  00002934  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000755  00000000  00000000  00002a78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000328  00000000  00000000  000031cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000034f5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ee       	ldi	r30, 0xE8	; 232
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 37       	cpi	r26, 0x7E	; 126
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ae e7       	ldi	r26, 0x7E	; 126
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 38       	cpi	r26, 0x80	; 128
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 99 00 	call	0x132	; 0x132 <main>
  8a:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DcMotor_Init>:
#include "Pwm.h"

void DcMotor_Init(void)
{
	/* !Comment: Initialize the DC Motor direction selection Pins */
	Dio_ChannelDirectionSet(DC_MOTOR_DIR_REG, DC_MOTOR_IN1_PIN, DIO_OUTPUT);	
  92:	41 e0       	ldi	r20, 0x01	; 1
  94:	65 e0       	ldi	r22, 0x05	; 5
  96:	84 e3       	ldi	r24, 0x34	; 52
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	0e 94 a0 00 	call	0x140	; 0x140 <Dio_ChannelDirectionSet>
	Dio_ChannelDirectionSet(DC_MOTOR_DIR_REG, DC_MOTOR_IN2_PIN, DIO_OUTPUT);
  9e:	41 e0       	ldi	r20, 0x01	; 1
  a0:	66 e0       	ldi	r22, 0x06	; 6
  a2:	84 e3       	ldi	r24, 0x34	; 52
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	0e 94 a0 00 	call	0x140	; 0x140 <Dio_ChannelDirectionSet>
	Dio_ChannelDirectionSet(DC_MOTOR_EN_DIR_REG, DC_MOTOR_EN_PIN, DIO_OUTPUT);
  aa:	41 e0       	ldi	r20, 0x01	; 1
  ac:	65 e0       	ldi	r22, 0x05	; 5
  ae:	81 e3       	ldi	r24, 0x31	; 49
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 a0 00 	call	0x140	; 0x140 <Dio_ChannelDirectionSet>
	/* !Comment: Initialize PWM module */
	Pwm_Init(&gStrPwm_Configuration[PWM_CHANNEL_1]);
  b6:	8a e6       	ldi	r24, 0x6A	; 106
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <Pwm_Init>
  be:	08 95       	ret

000000c0 <DcMotor_Control>:
}
void DcMotor_Control(DcMotor_RotationDirType Dir, DcMotor_SpeedType Speed)
{
  c0:	cf 93       	push	r28
  c2:	c6 2f       	mov	r28, r22
	switch(Dir)
  c4:	88 23       	and	r24, r24
  c6:	19 f0       	breq	.+6      	; 0xce <DcMotor_Control+0xe>
  c8:	81 30       	cpi	r24, 0x01	; 1
  ca:	71 f0       	breq	.+28     	; 0xe8 <DcMotor_Control+0x28>
  cc:	19 c0       	rjmp	.+50     	; 0x100 <DcMotor_Control+0x40>
	{
		case DC_MOTOR_TURN_CW:
		Dio_ChannelWrite(DC_MOTOR_OUT_REG, DC_MOTOR_IN1_PIN, DIO_HIGH);
  ce:	41 e0       	ldi	r20, 0x01	; 1
  d0:	65 e0       	ldi	r22, 0x05	; 5
  d2:	85 e3       	ldi	r24, 0x35	; 53
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	0e 94 be 00 	call	0x17c	; 0x17c <Dio_ChannelWrite>
		Dio_ChannelWrite(DC_MOTOR_OUT_REG, DC_MOTOR_IN2_PIN, DIO_LOW);
  da:	40 e0       	ldi	r20, 0x00	; 0
  dc:	66 e0       	ldi	r22, 0x06	; 6
  de:	85 e3       	ldi	r24, 0x35	; 53
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	0e 94 be 00 	call	0x17c	; 0x17c <Dio_ChannelWrite>
		break;
  e6:	0c c0       	rjmp	.+24     	; 0x100 <DcMotor_Control+0x40>
		case DC_MOTOR_TURN_CCW:
		Dio_ChannelWrite(DC_MOTOR_OUT_REG, DC_MOTOR_IN1_PIN, DIO_LOW);
  e8:	40 e0       	ldi	r20, 0x00	; 0
  ea:	65 e0       	ldi	r22, 0x05	; 5
  ec:	85 e3       	ldi	r24, 0x35	; 53
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 be 00 	call	0x17c	; 0x17c <Dio_ChannelWrite>
		Dio_ChannelWrite(DC_MOTOR_OUT_REG, DC_MOTOR_IN2_PIN, DIO_HIGH);
  f4:	41 e0       	ldi	r20, 0x01	; 1
  f6:	66 e0       	ldi	r22, 0x06	; 6
  f8:	85 e3       	ldi	r24, 0x35	; 53
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	0e 94 be 00 	call	0x17c	; 0x17c <Dio_ChannelWrite>
		break;		
		default:
		break;
	}	
	switch(Speed)
 100:	c1 30       	cpi	r28, 0x01	; 1
 102:	51 f0       	breq	.+20     	; 0x118 <DcMotor_Control+0x58>
 104:	18 f0       	brcs	.+6      	; 0x10c <DcMotor_Control+0x4c>
 106:	c2 30       	cpi	r28, 0x02	; 2
 108:	69 f0       	breq	.+26     	; 0x124 <DcMotor_Control+0x64>
 10a:	11 c0       	rjmp	.+34     	; 0x12e <DcMotor_Control+0x6e>
	{
		case DC_MOTOR_SPEED_LOW:
		Pwm_SetDutyCycle(PWM_CHANNEL_1, 20U);
 10c:	64 e1       	ldi	r22, 0x14	; 20
 10e:	70 e0       	ldi	r23, 0x00	; 0
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	0e 94 cd 01 	call	0x39a	; 0x39a <Pwm_SetDutyCycle>
		break;
 116:	0b c0       	rjmp	.+22     	; 0x12e <DcMotor_Control+0x6e>
		case DC_MOTOR_SPEED_MID:
		Pwm_SetDutyCycle(PWM_CHANNEL_1, 50U);
 118:	62 e3       	ldi	r22, 0x32	; 50
 11a:	70 e0       	ldi	r23, 0x00	; 0
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	0e 94 cd 01 	call	0x39a	; 0x39a <Pwm_SetDutyCycle>
		break;
 122:	05 c0       	rjmp	.+10     	; 0x12e <DcMotor_Control+0x6e>
		case DC_MOTOR_SPEED_HIGH:
		Pwm_SetDutyCycle(PWM_CHANNEL_1, 90U);
 124:	6a e5       	ldi	r22, 0x5A	; 90
 126:	70 e0       	ldi	r23, 0x00	; 0
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	0e 94 cd 01 	call	0x39a	; 0x39a <Pwm_SetDutyCycle>
		break;
		default:
		break;
	}
}
 12e:	cf 91       	pop	r28
 130:	08 95       	ret

00000132 <main>:

#include "DC_Motor.h"

int main(void)
{
	DcMotor_Init();
 132:	0e 94 49 00 	call	0x92	; 0x92 <DcMotor_Init>
	while (1)
	{
		DcMotor_Control(DC_MOTOR_TURN_CW, DC_MOTOR_SPEED_MID);
 136:	61 e0       	ldi	r22, 0x01	; 1
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	0e 94 60 00 	call	0xc0	; 0xc0 <DcMotor_Control>
 13e:	fb cf       	rjmp	.-10     	; 0x136 <main+0x4>

00000140 <Dio_ChannelDirectionSet>:

DioPinStateEnum_t Dio_ChannelRead(volatile uint8 * Port_reg, DioPinEnum_t Channel)
{
	DioPinStateEnum_t u8LocalPinValue = READ_BIT(*Port_reg,Channel);
	return (u8LocalPinValue);
}
 140:	44 23       	and	r20, r20
 142:	19 f0       	breq	.+6      	; 0x14a <Dio_ChannelDirectionSet+0xa>
 144:	41 30       	cpi	r20, 0x01	; 1
 146:	71 f0       	breq	.+28     	; 0x164 <Dio_ChannelDirectionSet+0x24>
 148:	08 95       	ret
 14a:	fc 01       	movw	r30, r24
 14c:	40 81       	ld	r20, Z
 14e:	21 e0       	ldi	r18, 0x01	; 1
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <Dio_ChannelDirectionSet+0x18>
 154:	22 0f       	add	r18, r18
 156:	33 1f       	adc	r19, r19
 158:	6a 95       	dec	r22
 15a:	e2 f7       	brpl	.-8      	; 0x154 <Dio_ChannelDirectionSet+0x14>
 15c:	20 95       	com	r18
 15e:	24 23       	and	r18, r20
 160:	20 83       	st	Z, r18
 162:	08 95       	ret
 164:	fc 01       	movw	r30, r24
 166:	40 81       	ld	r20, Z
 168:	21 e0       	ldi	r18, 0x01	; 1
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	02 c0       	rjmp	.+4      	; 0x172 <Dio_ChannelDirectionSet+0x32>
 16e:	22 0f       	add	r18, r18
 170:	33 1f       	adc	r19, r19
 172:	6a 95       	dec	r22
 174:	e2 f7       	brpl	.-8      	; 0x16e <Dio_ChannelDirectionSet+0x2e>
 176:	24 2b       	or	r18, r20
 178:	20 83       	st	Z, r18
 17a:	08 95       	ret

0000017c <Dio_ChannelWrite>:

void Dio_ChannelWrite(volatile uint8 * Port_reg, DioPinEnum_t Channel, DioPinStateEnum_t State)
{
	switch(State)
 17c:	44 23       	and	r20, r20
 17e:	19 f0       	breq	.+6      	; 0x186 <Dio_ChannelWrite+0xa>
 180:	41 30       	cpi	r20, 0x01	; 1
 182:	71 f0       	breq	.+28     	; 0x1a0 <Dio_ChannelWrite+0x24>
 184:	08 95       	ret
	{
		case DIO_LOW:
		CLEAR_BIT(*Port_reg,Channel);
 186:	fc 01       	movw	r30, r24
 188:	40 81       	ld	r20, Z
 18a:	21 e0       	ldi	r18, 0x01	; 1
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	02 c0       	rjmp	.+4      	; 0x194 <Dio_ChannelWrite+0x18>
 190:	22 0f       	add	r18, r18
 192:	33 1f       	adc	r19, r19
 194:	6a 95       	dec	r22
 196:	e2 f7       	brpl	.-8      	; 0x190 <Dio_ChannelWrite+0x14>
 198:	20 95       	com	r18
 19a:	24 23       	and	r18, r20
 19c:	20 83       	st	Z, r18
		break;
 19e:	08 95       	ret
		case DIO_HIGH:
		SET_BIT(*Port_reg,Channel);
 1a0:	fc 01       	movw	r30, r24
 1a2:	40 81       	ld	r20, Z
 1a4:	21 e0       	ldi	r18, 0x01	; 1
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <Dio_ChannelWrite+0x32>
 1aa:	22 0f       	add	r18, r18
 1ac:	33 1f       	adc	r19, r19
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <Dio_ChannelWrite+0x2e>
 1b2:	24 2b       	or	r18, r20
 1b4:	20 83       	st	Z, r18
 1b6:	08 95       	ret

000001b8 <Pwm_Init>:
#include "Macros.h"

uint16 gu16TimerTopValue = 0U;

void Pwm_Init(const Pwm_ConfigType *ConfigPtr)
{
 1b8:	cf 92       	push	r12
 1ba:	df 92       	push	r13
 1bc:	ef 92       	push	r14
 1be:	ff 92       	push	r15
 1c0:	0f 93       	push	r16
 1c2:	1f 93       	push	r17
 1c4:	cf 93       	push	r28
 1c6:	df 93       	push	r29
 1c8:	fc 01       	movw	r30, r24
	switch(ConfigPtr->PwmCh)
 1ca:	80 81       	ld	r24, Z
 1cc:	88 23       	and	r24, r24
 1ce:	19 f0       	breq	.+6      	; 0x1d6 <Pwm_Init+0x1e>
 1d0:	81 30       	cpi	r24, 0x01	; 1
 1d2:	99 f1       	breq	.+102    	; 0x23a <Pwm_Init+0x82>
 1d4:	d9 c0       	rjmp	.+434    	; 0x388 <Pwm_Init+0x1d0>
	{
		case PWM_CHANNEL_0:
		/* !Comment: Clear Registers before applying configuration */
		*TIMER0_CTRL_REG = 0x00U;
 1d6:	13 be       	out	0x33, r1	; 51
		*TIMER0_COUNTER_REG = 0x00U;
 1d8:	12 be       	out	0x32, r1	; 50
		/* !Comment: Apply configuration */
		*TIMER0_CTRL_REG |= ConfigPtr->PwmClkDiv | ConfigPtr->PwmMode | ConfigPtr->PwmPolarity;
 1da:	93 b7       	in	r25, 0x33	; 51
 1dc:	33 81       	ldd	r19, Z+3	; 0x03
 1de:	81 81       	ldd	r24, Z+1	; 0x01
 1e0:	22 81       	ldd	r18, Z+2	; 0x02
 1e2:	83 2b       	or	r24, r19
 1e4:	82 2b       	or	r24, r18
 1e6:	89 2b       	or	r24, r25
 1e8:	83 bf       	out	0x33, r24	; 51
		switch(ConfigPtr->PwmPolarity)
 1ea:	82 81       	ldd	r24, Z+2	; 0x02
 1ec:	80 32       	cpi	r24, 0x20	; 32
 1ee:	b1 f0       	breq	.+44     	; 0x21c <Pwm_Init+0x64>
 1f0:	80 33       	cpi	r24, 0x30	; 48
 1f2:	09 f0       	breq	.+2      	; 0x1f6 <Pwm_Init+0x3e>
 1f4:	c9 c0       	rjmp	.+402    	; 0x388 <Pwm_Init+0x1d0>
		{
			case PWM_HIGH:
			*TIMER0_CMP_REG = (uint8) (((100U - ConfigPtr->PwmDuty) / 100U) * PWM0_RESOLUTION);
 1f6:	80 85       	ldd	r24, Z+8	; 0x08
 1f8:	91 85       	ldd	r25, Z+9	; 0x09
 1fa:	24 e6       	ldi	r18, 0x64	; 100
 1fc:	30 e0       	ldi	r19, 0x00	; 0
 1fe:	28 1b       	sub	r18, r24
 200:	39 0b       	sbc	r19, r25
 202:	36 95       	lsr	r19
 204:	27 95       	ror	r18
 206:	36 95       	lsr	r19
 208:	27 95       	ror	r18
 20a:	ab e7       	ldi	r26, 0x7B	; 123
 20c:	b4 e1       	ldi	r27, 0x14	; 20
 20e:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__umulhisi3>
 212:	96 95       	lsr	r25
 214:	87 95       	ror	r24
 216:	81 95       	neg	r24
 218:	8c bf       	out	0x3c, r24	; 60
			break;
 21a:	b6 c0       	rjmp	.+364    	; 0x388 <Pwm_Init+0x1d0>
			case PWM_LOW:
			*TIMER0_CMP_REG = (uint8) ((ConfigPtr->PwmDuty / 100U) * PWM0_RESOLUTION);
 21c:	20 85       	ldd	r18, Z+8	; 0x08
 21e:	31 85       	ldd	r19, Z+9	; 0x09
 220:	36 95       	lsr	r19
 222:	27 95       	ror	r18
 224:	36 95       	lsr	r19
 226:	27 95       	ror	r18
 228:	ab e7       	ldi	r26, 0x7B	; 123
 22a:	b4 e1       	ldi	r27, 0x14	; 20
 22c:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__umulhisi3>
 230:	96 95       	lsr	r25
 232:	87 95       	ror	r24
 234:	81 95       	neg	r24
 236:	8c bf       	out	0x3c, r24	; 60
			break;
 238:	a7 c0       	rjmp	.+334    	; 0x388 <Pwm_Init+0x1d0>
			break;
		}
		break;
		case PWM_CHANNEL_1:
		/* !Comment: Clear Registers before applying configuration */
		*TIMER1_CTRL_A_REG = 0x00U;
 23a:	1f bc       	out	0x2f, r1	; 47
		*TIMER1_CTRL_B_REG = 0x00U;
 23c:	1e bc       	out	0x2e, r1	; 46
		*(uint16 *)TIMER1_COUNTER_LOW_REG = 0x00U;
 23e:	1d bc       	out	0x2d, r1	; 45
 240:	1c bc       	out	0x2c, r1	; 44
		/* !Comment: Apply configuration */
		switch(ConfigPtr->PwmMode)
 242:	81 81       	ldd	r24, Z+1	; 0x01
 244:	80 34       	cpi	r24, 0x40	; 64
 246:	79 f0       	breq	.+30     	; 0x266 <Pwm_Init+0xae>
 248:	88 34       	cpi	r24, 0x48	; 72
 24a:	c9 f4       	brne	.+50     	; 0x27e <Pwm_Init+0xc6>
		{
			case PWM_MODE_FAST:
			CLEAR_BIT(*TIMER1_CTRL_A_REG, 0U);
 24c:	8f b5       	in	r24, 0x2f	; 47
 24e:	8e 7f       	andi	r24, 0xFE	; 254
 250:	8f bd       	out	0x2f, r24	; 47
			SET_BIT(*TIMER1_CTRL_A_REG, 1U);
 252:	8f b5       	in	r24, 0x2f	; 47
 254:	82 60       	ori	r24, 0x02	; 2
 256:	8f bd       	out	0x2f, r24	; 47
			SET_BIT(*TIMER1_CTRL_B_REG, 3U);
 258:	8e b5       	in	r24, 0x2e	; 46
 25a:	88 60       	ori	r24, 0x08	; 8
 25c:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(*TIMER1_CTRL_B_REG, 4U);
 25e:	8e b5       	in	r24, 0x2e	; 46
 260:	80 61       	ori	r24, 0x10	; 16
 262:	8e bd       	out	0x2e, r24	; 46
			break;
 264:	0c c0       	rjmp	.+24     	; 0x27e <Pwm_Init+0xc6>
			case PWM_MODE_PHASE_CORRECT:
			SET_BIT(*TIMER1_CTRL_A_REG, 0U);
 266:	8f b5       	in	r24, 0x2f	; 47
 268:	81 60       	ori	r24, 0x01	; 1
 26a:	8f bd       	out	0x2f, r24	; 47
			SET_BIT(*TIMER1_CTRL_A_REG, 1U);
 26c:	8f b5       	in	r24, 0x2f	; 47
 26e:	82 60       	ori	r24, 0x02	; 2
 270:	8f bd       	out	0x2f, r24	; 47
			CLEAR_BIT(*TIMER1_CTRL_B_REG, 3U);
 272:	8e b5       	in	r24, 0x2e	; 46
 274:	87 7f       	andi	r24, 0xF7	; 247
 276:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(*TIMER1_CTRL_B_REG, 4U);
 278:	8e b5       	in	r24, 0x2e	; 46
 27a:	80 61       	ori	r24, 0x10	; 16
 27c:	8e bd       	out	0x2e, r24	; 46
 27e:	ef 01       	movw	r28, r30
			break;
			default:
			break;
		}
		/* !Comment: Set TOP ticks in ICR1 Register */
		gu16TimerTopValue = (uint16)(F_CPU / (ConfigPtr->PrescaleValue * (1000.0 / ConfigPtr->PwmPeriod))) - 1U;
 280:	06 81       	ldd	r16, Z+6	; 0x06
 282:	17 81       	ldd	r17, Z+7	; 0x07
 284:	64 81       	ldd	r22, Z+4	; 0x04
 286:	75 81       	ldd	r23, Z+5	; 0x05
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__floatunsisf>
 290:	9b 01       	movw	r18, r22
 292:	ac 01       	movw	r20, r24
 294:	60 e0       	ldi	r22, 0x00	; 0
 296:	70 e0       	ldi	r23, 0x00	; 0
 298:	8a e7       	ldi	r24, 0x7A	; 122
 29a:	94 e4       	ldi	r25, 0x44	; 68
 29c:	0e 94 47 02 	call	0x48e	; 0x48e <__divsf3>
 2a0:	6b 01       	movw	r12, r22
 2a2:	7c 01       	movw	r14, r24
 2a4:	b8 01       	movw	r22, r16
 2a6:	80 e0       	ldi	r24, 0x00	; 0
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__floatunsisf>
 2ae:	a7 01       	movw	r20, r14
 2b0:	96 01       	movw	r18, r12
 2b2:	0e 94 76 03 	call	0x6ec	; 0x6ec <__mulsf3>
 2b6:	9b 01       	movw	r18, r22
 2b8:	ac 01       	movw	r20, r24
 2ba:	60 e0       	ldi	r22, 0x00	; 0
 2bc:	74 e2       	ldi	r23, 0x24	; 36
 2be:	84 e7       	ldi	r24, 0x74	; 116
 2c0:	99 e4       	ldi	r25, 0x49	; 73
 2c2:	0e 94 47 02 	call	0x48e	; 0x48e <__divsf3>
 2c6:	0e 94 b9 02 	call	0x572	; 0x572 <__fixunssfsi>
 2ca:	61 50       	subi	r22, 0x01	; 1
 2cc:	71 09       	sbc	r23, r1
 2ce:	70 93 7f 00 	sts	0x007F, r23	; 0x80007f <__data_end+0x1>
 2d2:	60 93 7e 00 	sts	0x007E, r22	; 0x80007e <__data_end>
		*(uint16*)TIMER1_INP_CAP_LOW_REG = (uint16)gu16TimerTopValue;
 2d6:	77 bd       	out	0x27, r23	; 39
 2d8:	66 bd       	out	0x26, r22	; 38
		
		switch(ConfigPtr->PwmPolarity)
 2da:	8a 81       	ldd	r24, Y+2	; 0x02
 2dc:	80 32       	cpi	r24, 0x20	; 32
 2de:	61 f1       	breq	.+88     	; 0x338 <Pwm_Init+0x180>
 2e0:	80 33       	cpi	r24, 0x30	; 48
 2e2:	09 f0       	breq	.+2      	; 0x2e6 <Pwm_Init+0x12e>
 2e4:	4d c0       	rjmp	.+154    	; 0x380 <Pwm_Init+0x1c8>
		{
			case PWM_HIGH:
			SET_BIT(*TIMER1_CTRL_A_REG, 6U);
 2e6:	8f b5       	in	r24, 0x2f	; 47
 2e8:	80 64       	ori	r24, 0x40	; 64
 2ea:	8f bd       	out	0x2f, r24	; 47
			SET_BIT(*TIMER1_CTRL_A_REG, 7U);
 2ec:	8f b5       	in	r24, 0x2f	; 47
 2ee:	80 68       	ori	r24, 0x80	; 128
 2f0:	8f bd       	out	0x2f, r24	; 47
			*(uint16 *)TIMER1_CMP_A_LOW_REG = (uint16) (((100U - ConfigPtr->PwmDuty) / 100.0) * gu16TimerTopValue);
 2f2:	88 85       	ldd	r24, Y+8	; 0x08
 2f4:	99 85       	ldd	r25, Y+9	; 0x09
 2f6:	64 e6       	ldi	r22, 0x64	; 100
 2f8:	70 e0       	ldi	r23, 0x00	; 0
 2fa:	68 1b       	sub	r22, r24
 2fc:	79 0b       	sbc	r23, r25
 2fe:	80 e0       	ldi	r24, 0x00	; 0
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__floatunsisf>
 306:	20 e0       	ldi	r18, 0x00	; 0
 308:	30 e0       	ldi	r19, 0x00	; 0
 30a:	48 ec       	ldi	r20, 0xC8	; 200
 30c:	52 e4       	ldi	r21, 0x42	; 66
 30e:	0e 94 47 02 	call	0x48e	; 0x48e <__divsf3>
 312:	6b 01       	movw	r12, r22
 314:	7c 01       	movw	r14, r24
 316:	60 91 7e 00 	lds	r22, 0x007E	; 0x80007e <__data_end>
 31a:	70 91 7f 00 	lds	r23, 0x007F	; 0x80007f <__data_end+0x1>
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__floatunsisf>
 326:	a7 01       	movw	r20, r14
 328:	96 01       	movw	r18, r12
 32a:	0e 94 76 03 	call	0x6ec	; 0x6ec <__mulsf3>
 32e:	0e 94 b9 02 	call	0x572	; 0x572 <__fixunssfsi>
 332:	7b bd       	out	0x2b, r23	; 43
 334:	6a bd       	out	0x2a, r22	; 42
			break;
 336:	24 c0       	rjmp	.+72     	; 0x380 <Pwm_Init+0x1c8>
			case PWM_LOW:
			CLEAR_BIT(*TIMER1_CTRL_A_REG, 6U);
 338:	8f b5       	in	r24, 0x2f	; 47
 33a:	8f 7b       	andi	r24, 0xBF	; 191
 33c:	8f bd       	out	0x2f, r24	; 47
			SET_BIT(*TIMER1_CTRL_A_REG, 7U);
 33e:	8f b5       	in	r24, 0x2f	; 47
 340:	80 68       	ori	r24, 0x80	; 128
 342:	8f bd       	out	0x2f, r24	; 47
			*(uint16 *)TIMER1_CMP_A_LOW_REG = (uint16) ((ConfigPtr->PwmDuty / 100.0) * gu16TimerTopValue);
 344:	68 85       	ldd	r22, Y+8	; 0x08
 346:	79 85       	ldd	r23, Y+9	; 0x09
 348:	80 e0       	ldi	r24, 0x00	; 0
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__floatunsisf>
 350:	20 e0       	ldi	r18, 0x00	; 0
 352:	30 e0       	ldi	r19, 0x00	; 0
 354:	48 ec       	ldi	r20, 0xC8	; 200
 356:	52 e4       	ldi	r21, 0x42	; 66
 358:	0e 94 47 02 	call	0x48e	; 0x48e <__divsf3>
 35c:	6b 01       	movw	r12, r22
 35e:	7c 01       	movw	r14, r24
 360:	60 91 7e 00 	lds	r22, 0x007E	; 0x80007e <__data_end>
 364:	70 91 7f 00 	lds	r23, 0x007F	; 0x80007f <__data_end+0x1>
 368:	80 e0       	ldi	r24, 0x00	; 0
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__floatunsisf>
 370:	a7 01       	movw	r20, r14
 372:	96 01       	movw	r18, r12
 374:	0e 94 76 03 	call	0x6ec	; 0x6ec <__mulsf3>
 378:	0e 94 b9 02 	call	0x572	; 0x572 <__fixunssfsi>
 37c:	7b bd       	out	0x2b, r23	; 43
 37e:	6a bd       	out	0x2a, r22	; 42
			break;
			default:
			break;
		}
		*TIMER1_CTRL_B_REG |= ConfigPtr->PwmClkDiv;
 380:	9e b5       	in	r25, 0x2e	; 46
 382:	8b 81       	ldd	r24, Y+3	; 0x03
 384:	89 2b       	or	r24, r25
 386:	8e bd       	out	0x2e, r24	; 46
		case PWM_CHANNEL_2:
		break;
		default:
		break;
	}	
}
 388:	df 91       	pop	r29
 38a:	cf 91       	pop	r28
 38c:	1f 91       	pop	r17
 38e:	0f 91       	pop	r16
 390:	ff 90       	pop	r15
 392:	ef 90       	pop	r14
 394:	df 90       	pop	r13
 396:	cf 90       	pop	r12
 398:	08 95       	ret

0000039a <Pwm_SetDutyCycle>:
void Pwm_SetDutyCycle(Pwm_ChannelType ChannelNumber, uint16 DutyCycle)
{
 39a:	cf 92       	push	r12
 39c:	df 92       	push	r13
 39e:	ef 92       	push	r14
 3a0:	ff 92       	push	r15
	switch(ChannelNumber)
 3a2:	88 23       	and	r24, r24
 3a4:	19 f0       	breq	.+6      	; 0x3ac <Pwm_SetDutyCycle+0x12>
 3a6:	81 30       	cpi	r24, 0x01	; 1
 3a8:	39 f1       	breq	.+78     	; 0x3f8 <Pwm_SetDutyCycle+0x5e>
 3aa:	6c c0       	rjmp	.+216    	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
	{
		case PWM_CHANNEL_0:
		switch(gStrPwm_Configuration->PwmPolarity)
 3ac:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 3b0:	80 32       	cpi	r24, 0x20	; 32
 3b2:	a1 f0       	breq	.+40     	; 0x3dc <Pwm_SetDutyCycle+0x42>
 3b4:	80 33       	cpi	r24, 0x30	; 48
 3b6:	09 f0       	breq	.+2      	; 0x3ba <Pwm_SetDutyCycle+0x20>
 3b8:	65 c0       	rjmp	.+202    	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
		{
			case PWM_HIGH:
			*TIMER0_CMP_REG = (uint8) (((100U - DutyCycle) / 100U) * PWM0_RESOLUTION);
 3ba:	24 e6       	ldi	r18, 0x64	; 100
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	26 1b       	sub	r18, r22
 3c0:	37 0b       	sbc	r19, r23
 3c2:	36 95       	lsr	r19
 3c4:	27 95       	ror	r18
 3c6:	36 95       	lsr	r19
 3c8:	27 95       	ror	r18
 3ca:	ab e7       	ldi	r26, 0x7B	; 123
 3cc:	b4 e1       	ldi	r27, 0x14	; 20
 3ce:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__umulhisi3>
 3d2:	96 95       	lsr	r25
 3d4:	87 95       	ror	r24
 3d6:	81 95       	neg	r24
 3d8:	8c bf       	out	0x3c, r24	; 60
			break;
 3da:	54 c0       	rjmp	.+168    	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
			case PWM_LOW:
			*TIMER0_CMP_REG = (uint8) ((DutyCycle / 100U) * PWM0_RESOLUTION);
 3dc:	9b 01       	movw	r18, r22
 3de:	36 95       	lsr	r19
 3e0:	27 95       	ror	r18
 3e2:	36 95       	lsr	r19
 3e4:	27 95       	ror	r18
 3e6:	ab e7       	ldi	r26, 0x7B	; 123
 3e8:	b4 e1       	ldi	r27, 0x14	; 20
 3ea:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__umulhisi3>
 3ee:	96 95       	lsr	r25
 3f0:	87 95       	ror	r24
 3f2:	81 95       	neg	r24
 3f4:	8c bf       	out	0x3c, r24	; 60
			break;
 3f6:	46 c0       	rjmp	.+140    	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
			default:
			break;
		}
		break;
		case PWM_CHANNEL_1:
		switch(gStrPwm_Configuration->PwmPolarity)
 3f8:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 3fc:	80 32       	cpi	r24, 0x20	; 32
 3fe:	31 f1       	breq	.+76     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 400:	80 33       	cpi	r24, 0x30	; 48
 402:	09 f0       	breq	.+2      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 404:	3f c0       	rjmp	.+126    	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
		{
			case PWM_HIGH:
			*(uint16 *)TIMER1_CMP_A_LOW_REG = (uint16) (((100U - DutyCycle) / 100.0) * gu16TimerTopValue);
 406:	84 e6       	ldi	r24, 0x64	; 100
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	9c 01       	movw	r18, r24
 40c:	26 1b       	sub	r18, r22
 40e:	37 0b       	sbc	r19, r23
 410:	b9 01       	movw	r22, r18
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__floatunsisf>
 41a:	20 e0       	ldi	r18, 0x00	; 0
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	48 ec       	ldi	r20, 0xC8	; 200
 420:	52 e4       	ldi	r21, 0x42	; 66
 422:	0e 94 47 02 	call	0x48e	; 0x48e <__divsf3>
 426:	6b 01       	movw	r12, r22
 428:	7c 01       	movw	r14, r24
 42a:	60 91 7e 00 	lds	r22, 0x007E	; 0x80007e <__data_end>
 42e:	70 91 7f 00 	lds	r23, 0x007F	; 0x80007f <__data_end+0x1>
 432:	80 e0       	ldi	r24, 0x00	; 0
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__floatunsisf>
 43a:	a7 01       	movw	r20, r14
 43c:	96 01       	movw	r18, r12
 43e:	0e 94 76 03 	call	0x6ec	; 0x6ec <__mulsf3>
 442:	0e 94 b9 02 	call	0x572	; 0x572 <__fixunssfsi>
 446:	7b bd       	out	0x2b, r23	; 43
 448:	6a bd       	out	0x2a, r22	; 42
			break;
 44a:	1c c0       	rjmp	.+56     	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
			case PWM_LOW:
			*(uint16 *)TIMER1_CMP_A_LOW_REG = (uint16) ((DutyCycle / 100.0) * gu16TimerTopValue);
 44c:	80 e0       	ldi	r24, 0x00	; 0
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__floatunsisf>
 454:	20 e0       	ldi	r18, 0x00	; 0
 456:	30 e0       	ldi	r19, 0x00	; 0
 458:	48 ec       	ldi	r20, 0xC8	; 200
 45a:	52 e4       	ldi	r21, 0x42	; 66
 45c:	0e 94 47 02 	call	0x48e	; 0x48e <__divsf3>
 460:	6b 01       	movw	r12, r22
 462:	7c 01       	movw	r14, r24
 464:	60 91 7e 00 	lds	r22, 0x007E	; 0x80007e <__data_end>
 468:	70 91 7f 00 	lds	r23, 0x007F	; 0x80007f <__data_end+0x1>
 46c:	80 e0       	ldi	r24, 0x00	; 0
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__floatunsisf>
 474:	a7 01       	movw	r20, r14
 476:	96 01       	movw	r18, r12
 478:	0e 94 76 03 	call	0x6ec	; 0x6ec <__mulsf3>
 47c:	0e 94 b9 02 	call	0x572	; 0x572 <__fixunssfsi>
 480:	7b bd       	out	0x2b, r23	; 43
 482:	6a bd       	out	0x2a, r22	; 42
		case PWM_CHANNEL_2:
		break;
		default:
		break;
	}
}
 484:	ff 90       	pop	r15
 486:	ef 90       	pop	r14
 488:	df 90       	pop	r13
 48a:	cf 90       	pop	r12
 48c:	08 95       	ret

0000048e <__divsf3>:
 48e:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__divsf3x>
 492:	0c 94 3c 03 	jmp	0x678	; 0x678 <__fp_round>
 496:	0e 94 35 03 	call	0x66a	; 0x66a <__fp_pscB>
 49a:	58 f0       	brcs	.+22     	; 0x4b2 <__divsf3+0x24>
 49c:	0e 94 2e 03 	call	0x65c	; 0x65c <__fp_pscA>
 4a0:	40 f0       	brcs	.+16     	; 0x4b2 <__divsf3+0x24>
 4a2:	29 f4       	brne	.+10     	; 0x4ae <__divsf3+0x20>
 4a4:	5f 3f       	cpi	r21, 0xFF	; 255
 4a6:	29 f0       	breq	.+10     	; 0x4b2 <__divsf3+0x24>
 4a8:	0c 94 25 03 	jmp	0x64a	; 0x64a <__fp_inf>
 4ac:	51 11       	cpse	r21, r1
 4ae:	0c 94 70 03 	jmp	0x6e0	; 0x6e0 <__fp_szero>
 4b2:	0c 94 2b 03 	jmp	0x656	; 0x656 <__fp_nan>

000004b6 <__divsf3x>:
 4b6:	0e 94 4d 03 	call	0x69a	; 0x69a <__fp_split3>
 4ba:	68 f3       	brcs	.-38     	; 0x496 <__divsf3+0x8>

000004bc <__divsf3_pse>:
 4bc:	99 23       	and	r25, r25
 4be:	b1 f3       	breq	.-20     	; 0x4ac <__divsf3+0x1e>
 4c0:	55 23       	and	r21, r21
 4c2:	91 f3       	breq	.-28     	; 0x4a8 <__divsf3+0x1a>
 4c4:	95 1b       	sub	r25, r21
 4c6:	55 0b       	sbc	r21, r21
 4c8:	bb 27       	eor	r27, r27
 4ca:	aa 27       	eor	r26, r26
 4cc:	62 17       	cp	r22, r18
 4ce:	73 07       	cpc	r23, r19
 4d0:	84 07       	cpc	r24, r20
 4d2:	38 f0       	brcs	.+14     	; 0x4e2 <__divsf3_pse+0x26>
 4d4:	9f 5f       	subi	r25, 0xFF	; 255
 4d6:	5f 4f       	sbci	r21, 0xFF	; 255
 4d8:	22 0f       	add	r18, r18
 4da:	33 1f       	adc	r19, r19
 4dc:	44 1f       	adc	r20, r20
 4de:	aa 1f       	adc	r26, r26
 4e0:	a9 f3       	breq	.-22     	; 0x4cc <__divsf3_pse+0x10>
 4e2:	35 d0       	rcall	.+106    	; 0x54e <__divsf3_pse+0x92>
 4e4:	0e 2e       	mov	r0, r30
 4e6:	3a f0       	brmi	.+14     	; 0x4f6 <__divsf3_pse+0x3a>
 4e8:	e0 e8       	ldi	r30, 0x80	; 128
 4ea:	32 d0       	rcall	.+100    	; 0x550 <__divsf3_pse+0x94>
 4ec:	91 50       	subi	r25, 0x01	; 1
 4ee:	50 40       	sbci	r21, 0x00	; 0
 4f0:	e6 95       	lsr	r30
 4f2:	00 1c       	adc	r0, r0
 4f4:	ca f7       	brpl	.-14     	; 0x4e8 <__divsf3_pse+0x2c>
 4f6:	2b d0       	rcall	.+86     	; 0x54e <__divsf3_pse+0x92>
 4f8:	fe 2f       	mov	r31, r30
 4fa:	29 d0       	rcall	.+82     	; 0x54e <__divsf3_pse+0x92>
 4fc:	66 0f       	add	r22, r22
 4fe:	77 1f       	adc	r23, r23
 500:	88 1f       	adc	r24, r24
 502:	bb 1f       	adc	r27, r27
 504:	26 17       	cp	r18, r22
 506:	37 07       	cpc	r19, r23
 508:	48 07       	cpc	r20, r24
 50a:	ab 07       	cpc	r26, r27
 50c:	b0 e8       	ldi	r27, 0x80	; 128
 50e:	09 f0       	breq	.+2      	; 0x512 <__divsf3_pse+0x56>
 510:	bb 0b       	sbc	r27, r27
 512:	80 2d       	mov	r24, r0
 514:	bf 01       	movw	r22, r30
 516:	ff 27       	eor	r31, r31
 518:	93 58       	subi	r25, 0x83	; 131
 51a:	5f 4f       	sbci	r21, 0xFF	; 255
 51c:	3a f0       	brmi	.+14     	; 0x52c <__divsf3_pse+0x70>
 51e:	9e 3f       	cpi	r25, 0xFE	; 254
 520:	51 05       	cpc	r21, r1
 522:	78 f0       	brcs	.+30     	; 0x542 <__divsf3_pse+0x86>
 524:	0c 94 25 03 	jmp	0x64a	; 0x64a <__fp_inf>
 528:	0c 94 70 03 	jmp	0x6e0	; 0x6e0 <__fp_szero>
 52c:	5f 3f       	cpi	r21, 0xFF	; 255
 52e:	e4 f3       	brlt	.-8      	; 0x528 <__divsf3_pse+0x6c>
 530:	98 3e       	cpi	r25, 0xE8	; 232
 532:	d4 f3       	brlt	.-12     	; 0x528 <__divsf3_pse+0x6c>
 534:	86 95       	lsr	r24
 536:	77 95       	ror	r23
 538:	67 95       	ror	r22
 53a:	b7 95       	ror	r27
 53c:	f7 95       	ror	r31
 53e:	9f 5f       	subi	r25, 0xFF	; 255
 540:	c9 f7       	brne	.-14     	; 0x534 <__divsf3_pse+0x78>
 542:	88 0f       	add	r24, r24
 544:	91 1d       	adc	r25, r1
 546:	96 95       	lsr	r25
 548:	87 95       	ror	r24
 54a:	97 f9       	bld	r25, 7
 54c:	08 95       	ret
 54e:	e1 e0       	ldi	r30, 0x01	; 1
 550:	66 0f       	add	r22, r22
 552:	77 1f       	adc	r23, r23
 554:	88 1f       	adc	r24, r24
 556:	bb 1f       	adc	r27, r27
 558:	62 17       	cp	r22, r18
 55a:	73 07       	cpc	r23, r19
 55c:	84 07       	cpc	r24, r20
 55e:	ba 07       	cpc	r27, r26
 560:	20 f0       	brcs	.+8      	; 0x56a <__divsf3_pse+0xae>
 562:	62 1b       	sub	r22, r18
 564:	73 0b       	sbc	r23, r19
 566:	84 0b       	sbc	r24, r20
 568:	ba 0b       	sbc	r27, r26
 56a:	ee 1f       	adc	r30, r30
 56c:	88 f7       	brcc	.-30     	; 0x550 <__divsf3_pse+0x94>
 56e:	e0 95       	com	r30
 570:	08 95       	ret

00000572 <__fixunssfsi>:
 572:	0e 94 55 03 	call	0x6aa	; 0x6aa <__fp_splitA>
 576:	88 f0       	brcs	.+34     	; 0x59a <__fixunssfsi+0x28>
 578:	9f 57       	subi	r25, 0x7F	; 127
 57a:	98 f0       	brcs	.+38     	; 0x5a2 <__fixunssfsi+0x30>
 57c:	b9 2f       	mov	r27, r25
 57e:	99 27       	eor	r25, r25
 580:	b7 51       	subi	r27, 0x17	; 23
 582:	b0 f0       	brcs	.+44     	; 0x5b0 <__fixunssfsi+0x3e>
 584:	e1 f0       	breq	.+56     	; 0x5be <__fixunssfsi+0x4c>
 586:	66 0f       	add	r22, r22
 588:	77 1f       	adc	r23, r23
 58a:	88 1f       	adc	r24, r24
 58c:	99 1f       	adc	r25, r25
 58e:	1a f0       	brmi	.+6      	; 0x596 <__fixunssfsi+0x24>
 590:	ba 95       	dec	r27
 592:	c9 f7       	brne	.-14     	; 0x586 <__fixunssfsi+0x14>
 594:	14 c0       	rjmp	.+40     	; 0x5be <__fixunssfsi+0x4c>
 596:	b1 30       	cpi	r27, 0x01	; 1
 598:	91 f0       	breq	.+36     	; 0x5be <__fixunssfsi+0x4c>
 59a:	0e 94 6f 03 	call	0x6de	; 0x6de <__fp_zero>
 59e:	b1 e0       	ldi	r27, 0x01	; 1
 5a0:	08 95       	ret
 5a2:	0c 94 6f 03 	jmp	0x6de	; 0x6de <__fp_zero>
 5a6:	67 2f       	mov	r22, r23
 5a8:	78 2f       	mov	r23, r24
 5aa:	88 27       	eor	r24, r24
 5ac:	b8 5f       	subi	r27, 0xF8	; 248
 5ae:	39 f0       	breq	.+14     	; 0x5be <__fixunssfsi+0x4c>
 5b0:	b9 3f       	cpi	r27, 0xF9	; 249
 5b2:	cc f3       	brlt	.-14     	; 0x5a6 <__fixunssfsi+0x34>
 5b4:	86 95       	lsr	r24
 5b6:	77 95       	ror	r23
 5b8:	67 95       	ror	r22
 5ba:	b3 95       	inc	r27
 5bc:	d9 f7       	brne	.-10     	; 0x5b4 <__fixunssfsi+0x42>
 5be:	3e f4       	brtc	.+14     	; 0x5ce <__fixunssfsi+0x5c>
 5c0:	90 95       	com	r25
 5c2:	80 95       	com	r24
 5c4:	70 95       	com	r23
 5c6:	61 95       	neg	r22
 5c8:	7f 4f       	sbci	r23, 0xFF	; 255
 5ca:	8f 4f       	sbci	r24, 0xFF	; 255
 5cc:	9f 4f       	sbci	r25, 0xFF	; 255
 5ce:	08 95       	ret

000005d0 <__floatunsisf>:
 5d0:	e8 94       	clt
 5d2:	09 c0       	rjmp	.+18     	; 0x5e6 <__floatsisf+0x12>

000005d4 <__floatsisf>:
 5d4:	97 fb       	bst	r25, 7
 5d6:	3e f4       	brtc	.+14     	; 0x5e6 <__floatsisf+0x12>
 5d8:	90 95       	com	r25
 5da:	80 95       	com	r24
 5dc:	70 95       	com	r23
 5de:	61 95       	neg	r22
 5e0:	7f 4f       	sbci	r23, 0xFF	; 255
 5e2:	8f 4f       	sbci	r24, 0xFF	; 255
 5e4:	9f 4f       	sbci	r25, 0xFF	; 255
 5e6:	99 23       	and	r25, r25
 5e8:	a9 f0       	breq	.+42     	; 0x614 <__floatsisf+0x40>
 5ea:	f9 2f       	mov	r31, r25
 5ec:	96 e9       	ldi	r25, 0x96	; 150
 5ee:	bb 27       	eor	r27, r27
 5f0:	93 95       	inc	r25
 5f2:	f6 95       	lsr	r31
 5f4:	87 95       	ror	r24
 5f6:	77 95       	ror	r23
 5f8:	67 95       	ror	r22
 5fa:	b7 95       	ror	r27
 5fc:	f1 11       	cpse	r31, r1
 5fe:	f8 cf       	rjmp	.-16     	; 0x5f0 <__floatsisf+0x1c>
 600:	fa f4       	brpl	.+62     	; 0x640 <__floatsisf+0x6c>
 602:	bb 0f       	add	r27, r27
 604:	11 f4       	brne	.+4      	; 0x60a <__floatsisf+0x36>
 606:	60 ff       	sbrs	r22, 0
 608:	1b c0       	rjmp	.+54     	; 0x640 <__floatsisf+0x6c>
 60a:	6f 5f       	subi	r22, 0xFF	; 255
 60c:	7f 4f       	sbci	r23, 0xFF	; 255
 60e:	8f 4f       	sbci	r24, 0xFF	; 255
 610:	9f 4f       	sbci	r25, 0xFF	; 255
 612:	16 c0       	rjmp	.+44     	; 0x640 <__floatsisf+0x6c>
 614:	88 23       	and	r24, r24
 616:	11 f0       	breq	.+4      	; 0x61c <__floatsisf+0x48>
 618:	96 e9       	ldi	r25, 0x96	; 150
 61a:	11 c0       	rjmp	.+34     	; 0x63e <__floatsisf+0x6a>
 61c:	77 23       	and	r23, r23
 61e:	21 f0       	breq	.+8      	; 0x628 <__floatsisf+0x54>
 620:	9e e8       	ldi	r25, 0x8E	; 142
 622:	87 2f       	mov	r24, r23
 624:	76 2f       	mov	r23, r22
 626:	05 c0       	rjmp	.+10     	; 0x632 <__floatsisf+0x5e>
 628:	66 23       	and	r22, r22
 62a:	71 f0       	breq	.+28     	; 0x648 <__floatsisf+0x74>
 62c:	96 e8       	ldi	r25, 0x86	; 134
 62e:	86 2f       	mov	r24, r22
 630:	70 e0       	ldi	r23, 0x00	; 0
 632:	60 e0       	ldi	r22, 0x00	; 0
 634:	2a f0       	brmi	.+10     	; 0x640 <__floatsisf+0x6c>
 636:	9a 95       	dec	r25
 638:	66 0f       	add	r22, r22
 63a:	77 1f       	adc	r23, r23
 63c:	88 1f       	adc	r24, r24
 63e:	da f7       	brpl	.-10     	; 0x636 <__floatsisf+0x62>
 640:	88 0f       	add	r24, r24
 642:	96 95       	lsr	r25
 644:	87 95       	ror	r24
 646:	97 f9       	bld	r25, 7
 648:	08 95       	ret

0000064a <__fp_inf>:
 64a:	97 f9       	bld	r25, 7
 64c:	9f 67       	ori	r25, 0x7F	; 127
 64e:	80 e8       	ldi	r24, 0x80	; 128
 650:	70 e0       	ldi	r23, 0x00	; 0
 652:	60 e0       	ldi	r22, 0x00	; 0
 654:	08 95       	ret

00000656 <__fp_nan>:
 656:	9f ef       	ldi	r25, 0xFF	; 255
 658:	80 ec       	ldi	r24, 0xC0	; 192
 65a:	08 95       	ret

0000065c <__fp_pscA>:
 65c:	00 24       	eor	r0, r0
 65e:	0a 94       	dec	r0
 660:	16 16       	cp	r1, r22
 662:	17 06       	cpc	r1, r23
 664:	18 06       	cpc	r1, r24
 666:	09 06       	cpc	r0, r25
 668:	08 95       	ret

0000066a <__fp_pscB>:
 66a:	00 24       	eor	r0, r0
 66c:	0a 94       	dec	r0
 66e:	12 16       	cp	r1, r18
 670:	13 06       	cpc	r1, r19
 672:	14 06       	cpc	r1, r20
 674:	05 06       	cpc	r0, r21
 676:	08 95       	ret

00000678 <__fp_round>:
 678:	09 2e       	mov	r0, r25
 67a:	03 94       	inc	r0
 67c:	00 0c       	add	r0, r0
 67e:	11 f4       	brne	.+4      	; 0x684 <__fp_round+0xc>
 680:	88 23       	and	r24, r24
 682:	52 f0       	brmi	.+20     	; 0x698 <__fp_round+0x20>
 684:	bb 0f       	add	r27, r27
 686:	40 f4       	brcc	.+16     	; 0x698 <__fp_round+0x20>
 688:	bf 2b       	or	r27, r31
 68a:	11 f4       	brne	.+4      	; 0x690 <__fp_round+0x18>
 68c:	60 ff       	sbrs	r22, 0
 68e:	04 c0       	rjmp	.+8      	; 0x698 <__fp_round+0x20>
 690:	6f 5f       	subi	r22, 0xFF	; 255
 692:	7f 4f       	sbci	r23, 0xFF	; 255
 694:	8f 4f       	sbci	r24, 0xFF	; 255
 696:	9f 4f       	sbci	r25, 0xFF	; 255
 698:	08 95       	ret

0000069a <__fp_split3>:
 69a:	57 fd       	sbrc	r21, 7
 69c:	90 58       	subi	r25, 0x80	; 128
 69e:	44 0f       	add	r20, r20
 6a0:	55 1f       	adc	r21, r21
 6a2:	59 f0       	breq	.+22     	; 0x6ba <__fp_splitA+0x10>
 6a4:	5f 3f       	cpi	r21, 0xFF	; 255
 6a6:	71 f0       	breq	.+28     	; 0x6c4 <__fp_splitA+0x1a>
 6a8:	47 95       	ror	r20

000006aa <__fp_splitA>:
 6aa:	88 0f       	add	r24, r24
 6ac:	97 fb       	bst	r25, 7
 6ae:	99 1f       	adc	r25, r25
 6b0:	61 f0       	breq	.+24     	; 0x6ca <__fp_splitA+0x20>
 6b2:	9f 3f       	cpi	r25, 0xFF	; 255
 6b4:	79 f0       	breq	.+30     	; 0x6d4 <__fp_splitA+0x2a>
 6b6:	87 95       	ror	r24
 6b8:	08 95       	ret
 6ba:	12 16       	cp	r1, r18
 6bc:	13 06       	cpc	r1, r19
 6be:	14 06       	cpc	r1, r20
 6c0:	55 1f       	adc	r21, r21
 6c2:	f2 cf       	rjmp	.-28     	; 0x6a8 <__fp_split3+0xe>
 6c4:	46 95       	lsr	r20
 6c6:	f1 df       	rcall	.-30     	; 0x6aa <__fp_splitA>
 6c8:	08 c0       	rjmp	.+16     	; 0x6da <__fp_splitA+0x30>
 6ca:	16 16       	cp	r1, r22
 6cc:	17 06       	cpc	r1, r23
 6ce:	18 06       	cpc	r1, r24
 6d0:	99 1f       	adc	r25, r25
 6d2:	f1 cf       	rjmp	.-30     	; 0x6b6 <__fp_splitA+0xc>
 6d4:	86 95       	lsr	r24
 6d6:	71 05       	cpc	r23, r1
 6d8:	61 05       	cpc	r22, r1
 6da:	08 94       	sec
 6dc:	08 95       	ret

000006de <__fp_zero>:
 6de:	e8 94       	clt

000006e0 <__fp_szero>:
 6e0:	bb 27       	eor	r27, r27
 6e2:	66 27       	eor	r22, r22
 6e4:	77 27       	eor	r23, r23
 6e6:	cb 01       	movw	r24, r22
 6e8:	97 f9       	bld	r25, 7
 6ea:	08 95       	ret

000006ec <__mulsf3>:
 6ec:	0e 94 89 03 	call	0x712	; 0x712 <__mulsf3x>
 6f0:	0c 94 3c 03 	jmp	0x678	; 0x678 <__fp_round>
 6f4:	0e 94 2e 03 	call	0x65c	; 0x65c <__fp_pscA>
 6f8:	38 f0       	brcs	.+14     	; 0x708 <__mulsf3+0x1c>
 6fa:	0e 94 35 03 	call	0x66a	; 0x66a <__fp_pscB>
 6fe:	20 f0       	brcs	.+8      	; 0x708 <__mulsf3+0x1c>
 700:	95 23       	and	r25, r21
 702:	11 f0       	breq	.+4      	; 0x708 <__mulsf3+0x1c>
 704:	0c 94 25 03 	jmp	0x64a	; 0x64a <__fp_inf>
 708:	0c 94 2b 03 	jmp	0x656	; 0x656 <__fp_nan>
 70c:	11 24       	eor	r1, r1
 70e:	0c 94 70 03 	jmp	0x6e0	; 0x6e0 <__fp_szero>

00000712 <__mulsf3x>:
 712:	0e 94 4d 03 	call	0x69a	; 0x69a <__fp_split3>
 716:	70 f3       	brcs	.-36     	; 0x6f4 <__mulsf3+0x8>

00000718 <__mulsf3_pse>:
 718:	95 9f       	mul	r25, r21
 71a:	c1 f3       	breq	.-16     	; 0x70c <__mulsf3+0x20>
 71c:	95 0f       	add	r25, r21
 71e:	50 e0       	ldi	r21, 0x00	; 0
 720:	55 1f       	adc	r21, r21
 722:	62 9f       	mul	r22, r18
 724:	f0 01       	movw	r30, r0
 726:	72 9f       	mul	r23, r18
 728:	bb 27       	eor	r27, r27
 72a:	f0 0d       	add	r31, r0
 72c:	b1 1d       	adc	r27, r1
 72e:	63 9f       	mul	r22, r19
 730:	aa 27       	eor	r26, r26
 732:	f0 0d       	add	r31, r0
 734:	b1 1d       	adc	r27, r1
 736:	aa 1f       	adc	r26, r26
 738:	64 9f       	mul	r22, r20
 73a:	66 27       	eor	r22, r22
 73c:	b0 0d       	add	r27, r0
 73e:	a1 1d       	adc	r26, r1
 740:	66 1f       	adc	r22, r22
 742:	82 9f       	mul	r24, r18
 744:	22 27       	eor	r18, r18
 746:	b0 0d       	add	r27, r0
 748:	a1 1d       	adc	r26, r1
 74a:	62 1f       	adc	r22, r18
 74c:	73 9f       	mul	r23, r19
 74e:	b0 0d       	add	r27, r0
 750:	a1 1d       	adc	r26, r1
 752:	62 1f       	adc	r22, r18
 754:	83 9f       	mul	r24, r19
 756:	a0 0d       	add	r26, r0
 758:	61 1d       	adc	r22, r1
 75a:	22 1f       	adc	r18, r18
 75c:	74 9f       	mul	r23, r20
 75e:	33 27       	eor	r19, r19
 760:	a0 0d       	add	r26, r0
 762:	61 1d       	adc	r22, r1
 764:	23 1f       	adc	r18, r19
 766:	84 9f       	mul	r24, r20
 768:	60 0d       	add	r22, r0
 76a:	21 1d       	adc	r18, r1
 76c:	82 2f       	mov	r24, r18
 76e:	76 2f       	mov	r23, r22
 770:	6a 2f       	mov	r22, r26
 772:	11 24       	eor	r1, r1
 774:	9f 57       	subi	r25, 0x7F	; 127
 776:	50 40       	sbci	r21, 0x00	; 0
 778:	9a f0       	brmi	.+38     	; 0x7a0 <__mulsf3_pse+0x88>
 77a:	f1 f0       	breq	.+60     	; 0x7b8 <__mulsf3_pse+0xa0>
 77c:	88 23       	and	r24, r24
 77e:	4a f0       	brmi	.+18     	; 0x792 <__mulsf3_pse+0x7a>
 780:	ee 0f       	add	r30, r30
 782:	ff 1f       	adc	r31, r31
 784:	bb 1f       	adc	r27, r27
 786:	66 1f       	adc	r22, r22
 788:	77 1f       	adc	r23, r23
 78a:	88 1f       	adc	r24, r24
 78c:	91 50       	subi	r25, 0x01	; 1
 78e:	50 40       	sbci	r21, 0x00	; 0
 790:	a9 f7       	brne	.-22     	; 0x77c <__mulsf3_pse+0x64>
 792:	9e 3f       	cpi	r25, 0xFE	; 254
 794:	51 05       	cpc	r21, r1
 796:	80 f0       	brcs	.+32     	; 0x7b8 <__mulsf3_pse+0xa0>
 798:	0c 94 25 03 	jmp	0x64a	; 0x64a <__fp_inf>
 79c:	0c 94 70 03 	jmp	0x6e0	; 0x6e0 <__fp_szero>
 7a0:	5f 3f       	cpi	r21, 0xFF	; 255
 7a2:	e4 f3       	brlt	.-8      	; 0x79c <__mulsf3_pse+0x84>
 7a4:	98 3e       	cpi	r25, 0xE8	; 232
 7a6:	d4 f3       	brlt	.-12     	; 0x79c <__mulsf3_pse+0x84>
 7a8:	86 95       	lsr	r24
 7aa:	77 95       	ror	r23
 7ac:	67 95       	ror	r22
 7ae:	b7 95       	ror	r27
 7b0:	f7 95       	ror	r31
 7b2:	e7 95       	ror	r30
 7b4:	9f 5f       	subi	r25, 0xFF	; 255
 7b6:	c1 f7       	brne	.-16     	; 0x7a8 <__mulsf3_pse+0x90>
 7b8:	fe 2b       	or	r31, r30
 7ba:	88 0f       	add	r24, r24
 7bc:	91 1d       	adc	r25, r1
 7be:	96 95       	lsr	r25
 7c0:	87 95       	ror	r24
 7c2:	97 f9       	bld	r25, 7
 7c4:	08 95       	ret

000007c6 <__umulhisi3>:
 7c6:	a2 9f       	mul	r26, r18
 7c8:	b0 01       	movw	r22, r0
 7ca:	b3 9f       	mul	r27, r19
 7cc:	c0 01       	movw	r24, r0
 7ce:	a3 9f       	mul	r26, r19
 7d0:	70 0d       	add	r23, r0
 7d2:	81 1d       	adc	r24, r1
 7d4:	11 24       	eor	r1, r1
 7d6:	91 1d       	adc	r25, r1
 7d8:	b2 9f       	mul	r27, r18
 7da:	70 0d       	add	r23, r0
 7dc:	81 1d       	adc	r24, r1
 7de:	11 24       	eor	r1, r1
 7e0:	91 1d       	adc	r25, r1
 7e2:	08 95       	ret

000007e4 <_exit>:
 7e4:	f8 94       	cli

000007e6 <__stop_program>:
 7e6:	ff cf       	rjmp	.-2      	; 0x7e6 <__stop_program>
